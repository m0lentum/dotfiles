global !p
def snake_case(s):
  return s.lower().replace(' ', '_')
endglobal

#
# blocks and environments
#

snippet beg "begin{} / end{}"
\begin{$1}
  ${VISUAL}$0
\end{$1}
endsnippet

snippet begg "begin{} / end{} with parameters"
\begin{$1}[$2]
  ${VISUAL}$0
\end{$1}
endsnippet

snippet mb "math block" bA
\[
  ${VISUAL}$0
\]
endsnippet

snippet eq "numbered equation" b
\begin{equation}\label{eq:$1}
  ${VISUAL}$0
\end{equation}
endsnippet

snippet eqa "numbered array of equations" b
\begin{eqnarray}
  ${VISUAL}$0
\end{eqnarray}
endsnippet

snippet ali- "align" bA
\begin{align}
  ${VISUAL}$0
\end{align}
endsnippet

snippet ali* "align*" bA
\begin{align*}
  ${VISUAL}$0
\end{align*}
endsnippet

snippet mat "bmatrix"
\begin{bmatrix}
  ${VISUAL}$0
\end{bmatrix}
endsnippet

snippet dd "derivative" i
\frac{d$1}{d$2}$0
endsnippet

snippet pp "partial derivative" i
\frac{\partial $1}{\partial $2}$0
endsnippet

#
# text shorthands
#

snippet cha "chapter" b
\chapter{$1}\label{ch:`!p snip.rv = snake_case(t[1])`}$0
endsnippet

snippet sec* "unnumbered section" bA
\\$1section*{$2}$0
endsnippet

snippet sec "section" b
\\$1section{$2}\label{sec:`!p snip.rv = snake_case(t[2])`}$0
endsnippet

snippet bf "textbf{}"
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet it "textit{}"
\textit{${1:${VISUAL}}}$0
endsnippet

snippet ci "textcite"
\textcite{$1}$0
endsnippet

snippet pci "parencite"
\parencite{$1}$0
endsnippet

snippet pci* "parencite*"
\parencite*{$1}$0
endsnippet

snippet lab "label"
\label{$1}$0
endsnippet

#
# symbol and expression shorthands
#

snippet -> "right arrow"
\rightarrow
endsnippet

snippet --> "long right arrow"
\longrightarrow
endsnippet

snippet <- "left arrow"
\leftarrow
endsnippet

snippet par "partial derivative" i
\partial
endsnippet

snippet eps "epsilon" i
\varepsilon
endsnippet

snippet inf "infinity" i
\infty
endsnippet

snippet "([a-zA-Z])bb" "postfix mathbb" ri
\mathbb{`!p snip.rv=match.group(1)`}
endsnippet

snippet "([a-zA-Z])bf" "postfix mathbf" ri
\mathbf{`!p snip.rv=match.group(1)`}
endsnippet

snippet "([a-zA-Z])cal" "postfix mathcal" ri
\mathcal{`!p snip.rv=match.group(1)`}
endsnippet

snippet "([a-zA-Z])bar" "postfix overline" ri
\overline{`!p snip.rv=match.group(1)`}
endsnippet

snippet "([a-zA-Z])hat" "postfix hat" ri
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet "([a-zA-Z])til" "postfix tilde" ri
\tilde{`!p snip.rv=match.group(1)`}
endsnippet

snippet over "overset" i
\overset{$1}{${2:${VISUAL}}}$0
endsnippet

snippet div "divergence" i
\nabla \cdot
endsnippet

snippet curl "curl" i
\nabla \times
endsnippet

snippet fr "fraction" i
\frac{$1}{$2}$0
endsnippet

snippet sum "sum" i
\sum_{$1}^{$2}$0
endsnippet

snippet int "integral" i
\int_{$1}^{$2}$0
endsnippet

snippet inv "inverse" i
^{-1}
endsnippet

snippet ex "exponent" i
^{$1}$0
endsnippet

snippet "ex([a-zA-Z0-9])" "single symbol exponent" ri
^`!p snip.rv=match.group(1)`
endsnippet

snippet "R([a-zA-Z0-9])" "real vector space" ri
\mathbb{R}^`!p snip.rv=match.group(1)`
endsnippet

snippet "C([a-zA-Z0-9])" "complex vector space" ri
\mathbb{C}^`!p snip.rv=match.group(1)`
endsnippet
